version: "3.4"
services:
  minio:
    logging: &logging
      driver: loki-compose
      options:
        loki-url: "${LOGS_URL}"
        loki-retries: "1"
    image: minio/minio:RELEASE.2021-01-16T02-19-44Z
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/loki-data && mkdir -p /data/loki-admin && /usr/bin/minio server /data
    environment:
      - MINIO_ACCESS_KEY=loki
      - MINIO_SECRET_KEY=supersecret
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_UPDATE=off
    ports:
      - 9000
    volumes:
      - ./.data/minio:/data
  read:
    logging:
      <<: *logging
    build:
      context: .
      dockerfile: dev.dockerfile
    image: loki
    ports:
      - 3100
      - 7946
      - 9095
      - 18001
    deploy:
      mode: replicated
      replicas: 2
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_TAGS=app=read
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    command:
      - sh
      - -euc
      - |
        echo -n "waiting for minio to be ready: " >&2
        until wget -O /dev/null -S http://minio:9000/minio/health/ready 2>&1 | grep "200 OK" > /dev/null 2> /dev/null; do
          echo -n "." >&2
          sleep 2
        done
        echo " ready" >&2

        exec ./dlv exec ./loki --listen=:18001 --headless=true --api-version=2 --accept-multiclient --continue -- \
          -config.file=/config/config.yaml -s3.force-path-style -target=read
    volumes:
      - ./.data/read:/data:rw
      - ./config:/config
    networks:
      default:
        aliases:
          - loki

  write:
    logging:
      <<: *logging
    image: loki
    ports:
      - 3100
      - 7946
      - 9095
      - 18002
    deploy:
      mode: replicated
      replicas: 2
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_TAGS=app=write
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    command:
      - sh
      - -euc
      - |
        echo -n "waiting for minio to be ready: " >&2
        until wget -O /dev/null -S http://minio:9000/minio/health/ready 2>&1 | grep "200 OK" > /dev/null 2> /dev/null; do
          echo -n "." >&2
          sleep 2
        done
        echo " ready" >&2

        exec ./dlv exec ./loki --listen=:18002 --headless=true --api-version=2 --accept-multiclient --continue -- \
          -config.file=/config/config.yaml -s3.force-path-style -target=write
    volumes:
      - ./.data/write:/data:rw
      - ./config:/config
    networks:
      default:
        aliases:
          - loki

  compactor:
    logging:
      <<: *logging
    image: loki
    ports:
      - 3100
      - 7946
      - 9095
      - 18003
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_TAGS=app=compactor
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    command:
      - sh
      - -euc
      - |
        echo -n "waiting for minio to be ready: " >&2
        until wget -O /dev/null -S http://minio:9000/minio/health/ready 2>&1 | grep "200 OK" > /dev/null 2> /dev/null; do
          echo -n "." >&2
          sleep 2
        done
        echo " ready" >&2

        exec ./dlv exec ./loki --listen=:18003 --headless=true --api-version=2 --accept-multiclient --continue -- \
          -config.file=/config/config.yaml -s3.force-path-style -target=compactor
    volumes:
      - ./.data/compactor:/data:rw
      - ./config:/config
    networks:
      default:
        aliases:
          - loki

  jaeger:
    logging:
      <<: *logging
    image: jaegertracing/all-in-one
    ports:
      - 16686:16686
      - "14268"

  promtail:
    logging:
      <<: *logging
    image: grafana/promtail:2.3.0
    volumes:
      - /var/log:/var/log
      - ./config:/config
    command: -config.file=/config/promtail.yaml

  grafana:
    logging:
      <<: *logging
    image: grafana/grafana:latest
    environment:
      - GF_PATHS_PROVISIONING=/etc/config/grafana/provisioning
    ports:
      - "3000:3000"
    volumes:
      - ./.data/grafana:/var/lib/grafana:rw
      - ./config/datasource.yaml:/etc/config/grafana/provisioning/datasources/ds.yaml
